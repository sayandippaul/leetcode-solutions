class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        int l=0,r=nums.size()-1;
        if(r==0) return nums[0];
        if(nums[0]!=nums[1]) return nums[0];
        if(nums[r]!=nums[r-1]) return nums[r];
        while(l<=r){
            int m=(r+l)/2;
            cout<<l<<r<<" "<<m<<endl;
            if(nums[m]!=nums[m+1] && nums[m-1]!=nums[m]){
                return nums[m];
            }
            if(m%2==0){

            if(nums[m]==nums[m-1]){
                r=m-1;
            }
           if(nums[m]==nums[m+1]) {
                l=m+1;
            }


            }
            else{



            if(nums[m]==nums[m-1]){
                l=m+1;
            }
           if(nums[m]==nums[m+1]) {
                r=m-1;
            }
            }
        }
        return 0;
    }
};
