class Solution {
public:
    int findday(vector<int>& b,int d,int k){
        int c=0,bo=0;
        for(int i=0;i<b.size();i++){
            if(b[i]<=d){
                c++;
            }
            else{
                c=0;
            }
            if(c/k==1){
                c=0;
                bo++;
            }
        }
        return bo;
    }
   pair<int,int> findmaxmin(vector<int>& b){
         long long int M=INT_MIN,m=INT_MAX;
        for(int i=0;i<b.size();i++){
            // M=max(b[i],M);
            if(b[i]>=M){
                M=b[i];
            }if(b[i]<=m){
                m=b[i];
            }
            // m=min(b[i],m);
        }
        pair<int,int> v;
        v.first=M;
        v.second=m;
        return v;
    }
    int minDays(vector<int>& b,long long int p,long long int k) {
        if(p*k>b.size()) return -1;
       long long int l=findmaxmin(b).second; 
       long long int r=findmaxmin(b).first;
       cout<<l<<" "<<r<<endl;
       while(l<=r){
        long long int m=(l+r)/2;
        long long int bo=findday(b,m,k);
        cout<<l<< " "<<r<<" "<<bo<<endl;
        if(bo<p){
          l=m+1;  
        }
        else{
          r=m-1;  
        }
       } 
       return l;
    }
};
